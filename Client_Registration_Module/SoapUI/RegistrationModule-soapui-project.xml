<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="db1b39a7-84a1-430d-b6d9-001b598c6a13" activeEnvironment="Default" name="RegistrationModule" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="39c0858a-ea3d-4553-baef-99125708ece9" port="8080" path="/" host="Sten-PC" name="returnMealsToRegisterList" docroot=""><con:settings/><con:properties><con:property><con:name>Encoding</con:name><con:value>UTF-8</con:value></con:property></con:properties><con:restMockAction name="/meals-to-register" method="GET" resourcePath="/meals-to-register" id="aaef4337-3d32-495c-98ba-7f7bcb18a71d"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="391363ca-42c0-441c-972a-47bc52bc977c" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"mealsToRegister":
				[
					{ "id": "1001", "name": "Lõunasöök" },
					{ "id": "1002", "name": "Lisaeine" },
					{ "id": "1003", "name": "Hommikusöök järgmisel päeval" }
				]
}</con:responseContent><con:header><con:name>Content-Type</con:name><con:value>application/json; charset=iso-8859-1</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>